{"version":3,"sources":["routes/routes.js","commonComponents/Header.js","constants/serverUrl.js","commonComponents/PostSummary.js","pages/Home.js","pages/AddPost.js","pages/Post.js","pages/Authors.js","providers/ThemeProvider/ThemeProvider.js","providers/ThemeProvider/useTheme.js","App.js","index.js"],"names":["routes","home","authors","post","newPost","adminLogin","Header","useState","isOpen","setIsOpen","Navbar","color","light","expand","activeClassName","className","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","ServerUrl","PostSummary","id","title","author","content","replace","substring","Home","posts","setPosts","history","useHistory","console","log","Math","random","useEffect","setLoading","fetch","mode","then","res","json","data","catch","error","loading","map","postIndex","_id","name","Button","push","AddPost","setTitle","setAuthor","setcontent","setAuthors","isSubmit","setSubmit","Form","onSubmit","e","preventDefault","reqBody","authorId","headers","method","body","JSON","stringify","result","alert","finally","FormGroup","Label","for","Input","type","value","onChange","event","target","placeholder","required","each","eachIndex","rows","Spinner","Post","setPost","useParams","Authors","ListGroup","ListGroupItem","ThemeContext","createContext","Provider","ThemeProvider","children","setMode","toggle","useTheme","useContext","App","theme","exact","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6cb8eb88.chunk.js","sourcesContent":["const routes = {\r\n  home: \"/\",\r\n  authors: \"/authors\",\r\n  post: \"/post/:id\",\r\n  newPost: \"/post/add-new\",\r\n  adminLogin: \"/login\"\r\n};\r\n\r\nexport default routes;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavbarText\r\n} from \"reactstrap\";\r\nimport routes from \"../routes/routes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavLink\r\n          activeClassName=\"active\"\r\n          className=\"navbar-brand\"\r\n          to={routes.home}\r\n        >\r\n          BlogApp\r\n        </NavLink>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"me-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink\r\n                activeClassName=\"active\"\r\n                className=\"nav-link\"\r\n                to={routes.authors}\r\n              >\r\n                Authors\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n                to={routes.newPost}\r\n              >\r\n                AddPost\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const ServerUrl = \"https://tranquil-peak-36251.herokuapp.com\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport routes from \"../routes/routes\";\r\nconst PostSummary = ({ id,title, author, content }) => {\r\n  return (\r\n    <div>\r\n      <Link to={routes.post.replace(\":id\",id)}>\r\n        <h3>{title}</h3>\r\n      </Link>\r\n      <p>{author}</p>\r\n      <p>{content.substring(0, 100) + \"...\"}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostSummary;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import Header from \"../commonComponents/Header\";\r\nimport { ServerUrl } from \"../constants/serverUrl\";\r\nimport PostSummary from \"../commonComponents/PostSummary\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport routes from \"../routes/routes\";\r\nconst Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const history = useHistory();\r\n  console.log(history, Math.random());\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(ServerUrl + \"/posts\", {\r\n      mode: \"cors\"\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data)\r\n        setPosts(data.posts);\r\n        setLoading(false);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  if (loading) {\r\n    return <h1 className=\"container\">Loading!!</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        {/* <Header /> */}\r\n        <h1>Home</h1>\r\n        {/* {loading?<h1>LoadingApp</h1>} */}\r\n        {posts.map((post, postIndex) => {\r\n          const readmore = () => {\r\n            history.push(routes.post.replace(\":id\", post._id));\r\n          };\r\n          return (\r\n            <div key={postIndex}>\r\n              <PostSummary\r\n                id={post._id}\r\n                title={post.title}\r\n                author={post.author.name}\r\n                content={post.content}\r\n              />\r\n              <Button onClick={readmore}>Read More</Button>\r\n            </div>\r\n\r\n            // <div key={postIndex}>\r\n            //   <h3>{post.title}</h3>\r\n            //   <p>{post.author.name}</p>\r\n            //   <p>{post.content.substring(0, 100) + \"...\"}</p>\r\n            // </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from \"reactstrap\";\r\nimport { ServerUrl } from \"../constants/serverUrl\";\r\nconst AddPost = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\"); //by default authors value is empty so if you not change ans select the author the form will not be submitted to avoid this setAuhtor is called in useeffect hook of authors\r\n  const [content, setcontent] = useState(\"\");\r\n  const [authors, setAuthors] = useState([]);\r\n  const [isSubmit, setSubmit] = useState(false);\r\n  const onChangeTitle = (event) => setTitle(event.target.value);\r\n  const onChangeAuthor = (event) => setAuthor(event.target.value);\r\n  const onChangeContent = (event) => setcontent(event.target.value);\r\n  useEffect(() => {\r\n    fetch(ServerUrl + \"/author\", {\r\n      mode: \"cors\"\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setAuthors(data.author);\r\n        console.log(data.author[0]._id);\r\n        setAuthor(data.author[0]._id); //this changes the default value from empty to value of first index of aray.\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  const onFormSubmit = (e) => {\r\n    setSubmit(true);\r\n    e.preventDefault(); //it prevents reloading the page after submitting form\r\n    const reqBody = {\r\n      title,\r\n      content,\r\n      authorId: author\r\n    };\r\n    fetch(`${ServerUrl}/posts`, {\r\n      headers: { \"Content-Type\": \"application/json\" }, //the server will not understand that the data sent is in json format,that why the header content type is used\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(reqBody)\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n\r\n      .then((result) => alert(result))\r\n\r\n      .catch(console.error())\r\n      .finally(() => {\r\n        setSubmit(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>AddPost</h1>\r\n      <Form onSubmit={onFormSubmit}>\r\n        <FormGroup>\r\n          <Label for=\"title\">Title</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={onChangeTitle}\r\n            id=\"title\"\r\n            placeholder=\"Title Post\"\r\n            required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"authorname\">Author</Label>\r\n          <Input\r\n            type=\"select\"\r\n            value={author}\r\n            onChange={onChangeAuthor}\r\n            name=\"authorname\"\r\n            id=\"authorname\"\r\n            placeholder=\"Author's Name\"\r\n            required\r\n          >\r\n            {authors.map((each, eachIndex) => {\r\n              return (\r\n                <option value={each._id} key={eachIndex}>\r\n                  {each.name}\r\n                </option>\r\n              );\r\n            })}\r\n            {/* In html we add selected attribute as true and disable it so that\r\n            users can select manually but in react due to rerendering happens\r\n            once selecting the selected filed is not used.\r\n            <option selected={author === \"\"} disabled>\r\n              select an option\r\n            </option> */}\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"contentText\">Content</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            value={content}\r\n            onChange={onChangeContent}\r\n            rows=\"10\"\r\n            name=\"content\"\r\n            id=\"content\"\r\n            required\r\n          />\r\n        </FormGroup>\r\n\r\n        {isSubmit ? (\r\n          <Spinner color=\"primary\" />\r\n        ) : (\r\n          <Button className=\"btn btn-primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ServerUrl } from \"../constants/serverUrl\";\r\n\r\nconst Post = () => {\r\n  const [post, setPost] = useState([]);\r\n  const [loading,setLoading]=useState(false)\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\nsetLoading(true)\r\n    fetch(ServerUrl + `/posts/${id}`, {\r\n      mode: \"cors\"\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {setPost(data.post)\r\n      setLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  if(loading){\r\n    return <h1 className=\"container\">Loading!!</h1>\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>{post.title}</h2>\r\n        <p>{post.author?.name}</p>\r\n        <p>{post.content}</p>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  }\r\n  \r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ServerUrl } from \"../constants/serverUrl\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nconst Authors = () => {\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(ServerUrl + \"/author\", {\r\n      mode: \"cors\"\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAuthor(data.author);\r\n        setLoading(false);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  const [authors, setAuthor] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  if (loading) {\r\n    return <h1 className=\"container\">loading!!</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Authors</h1>\r\n        <ListGroup>\r\n          {authors.map((author) => {\r\n            return (\r\n              <ListGroupItem key={author._id}>{author.name} </ListGroupItem>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Authors;\r\n","import React, { createContext, useState } from \"react\";\r\n//this theme is used  only during server side rendering.\r\nconst theme = \"light\";\r\n//themeContext is a Data structure that is used by react for storing internal data for the providers.\r\n//create Context is available intenally in React and the default value of context is theme which is \"light\".\r\n//Now this will create a seperate area  for storing data named ThemeContext in react\r\nexport const ThemeContext = createContext(theme);\r\n\r\n//destructing ProviderComponent from themecontext to wrap the entire components which will be the actual theme provider component\r\nconst { Provider } = ThemeContext;\r\n\r\n//provider components have one props by default called childern(anything inside two tags is called children prop)\r\nconst ThemeProvider = ({ children }) => {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const toggle = () => {\r\n    setMode(mode === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n  return (\r\n    // This value indicates the value you see in react.provider inspect section.since it is a provider whenever the change occurs in the toggle it will affect the entire components.\r\n    <Provider value={{ mode, toggle }}>{children}</Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"./ThemeProvider\";\r\n\r\nconst useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};\r\n\r\nexport default useTheme;\r\n","import \"../src/styles.css\";\nimport Header from \"./commonComponents/Header\";\nimport Home from \"./pages/Home\";\nimport AddPost from \"../src/pages/AddPost\";\nimport Post from \"../src/pages/Post\";\nimport Authors from \"../src/pages/Authors\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport routes from \"../src/routes/routes\";\nimport Red from \"./providers/ThemeProvider/Reducer\"\n// import { useContext } from \"react\";\n// import { ThemeContext } from \"./providers/ThemeProvider/ThemeProvider\";\nimport { Button } from \"reactstrap\";\nimport useTheme from \"./providers/ThemeProvider/useTheme\";\n\nexport default function App() {\n  const theme = useTheme();\n  // const theme = useContext(ThemeContext);//comenting as we use our custom hook\n\n  return (\n    <>\n      {/* <ul>\n            <li>\n              <Link to={routes.home}>Home</Link>\n            </li>\n            <li>\n              <Link to={routes.authors}>Authors</Link>\n            </li>\n            <li>\n              <Link to={routes.newPost}>Add POSTS</Link>\n            </li>\n          </ul> */}\n      <Header />\n      {/* <Red /> */}\n      <Button className=\"but\" onClick={theme.toggle}>\n        {theme.mode}\n      </Button>\n      <Switch>\n        <Route exact path={routes.home}>\n          <Home />\n        </Route>\n        <Route path={routes.newPost}>\n          <AddPost />\n        </Route>\n        <Route path={routes.post}>\n          <Post />\n        </Route>\n        <Route path={routes.authors}>\n          <Authors />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport ThemeProvider from \"./providers/ThemeProvider/ThemeProvider\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <ThemeProvider>\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}